@startuml
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 class NamedValue {
  Name string
  Ordinal int
  Value Value
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 class TxOptions {
  Isolation IsolationLevel
  ReadOnly bool
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 class noRows {
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 class boolType {
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 class int32Type {
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 class stringType {
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 class Null {
  Converter ValueConverter
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 class NotNull {
  Converter ValueConverter
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 class defaultConverter {
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface Value  {
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface Driver  {
  Open(name string)(Conn,error)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface DriverContext  {
  OpenConnector(name string)(Connector,error)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface Connector  {
  Connect(context.Context)(Conn,error)
  Driver()Driver
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface Pinger  {
  Ping(ctx context.Context)error
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface Execer  {
  Exec(query string,args []Value)(Result,error)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface ExecerContext  {
  ExecContext(ctx context.Context,query string,args []NamedValue)(Result,error)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface Queryer  {
  Query(query string,args []Value)(Rows,error)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface QueryerContext  {
  QueryContext(ctx context.Context,query string,args []NamedValue)(Rows,error)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface Conn  {
  Prepare(query string)(Stmt,error)
  Close()error
  Begin()(Tx,error)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface ConnPrepareContext  {
  PrepareContext(ctx context.Context,query string)(Stmt,error)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface ConnBeginTx  {
  BeginTx(ctx context.Context,opts TxOptions)(Tx,error)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface SessionResetter  {
  ResetSession(ctx context.Context)error
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface Result  {
  LastInsertId()(int64,error)
  RowsAffected()(int64,error)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface Stmt  {
  Close()error
  NumInput()int
  Exec(args []Value)(Result,error)
  Query(args []Value)(Rows,error)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface StmtExecContext  {
  ExecContext(ctx context.Context,args []NamedValue)(Result,error)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface StmtQueryContext  {
  QueryContext(ctx context.Context,args []NamedValue)(Rows,error)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface NamedValueChecker  {
  CheckNamedValue(*NamedValue)error
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface ColumnConverter  {
  ColumnConverter(idx int)ValueConverter
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface Rows  {
  Columns()[]string
  Close()error
  Next(dest []Value)error
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface RowsNextResultSet  {
  HasNextResultSet()bool
  NextResultSet()error
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface RowsColumnTypeScanType  {
  ColumnTypeScanType(index int)reflect.Type
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface RowsColumnTypeDatabaseTypeName  {
  ColumnTypeDatabaseTypeName(index int)string
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface RowsColumnTypeLength  {
  ColumnTypeLength(index int)(length int64,ok bool)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface RowsColumnTypeNullable  {
  ColumnTypeNullable(index int)nullable,ok bool
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface RowsColumnTypePrecisionScale  {
  ColumnTypePrecisionScale(index int)(precision,scale int64,ok bool)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface Tx  {
  Commit()error
  Rollback()error
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface ValueConverter  {
  ConvertValue(v interface  { })(Value,error)
} 
}
namespace github.com\\tfbrother\\go\\src\\database\\sql\\driver {
 interface Valuer  {
  Value()(Value,error)
} 
}
github.com\\tfbrother\\go\\src\\database\\sql\\driver.Value <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.NamedValue
github.com\\tfbrother\\go\\src\\database\\sql\\driver.Value <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.TxOptions
github.com\\tfbrother\\go\\src\\database\\sql\\driver.Value <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.noRows
github.com\\tfbrother\\go\\src\\database\\sql\\driver.Value <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.boolType
github.com\\tfbrother\\go\\src\\database\\sql\\driver.Value <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.int32Type
github.com\\tfbrother\\go\\src\\database\\sql\\driver.Value <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.stringType
github.com\\tfbrother\\go\\src\\database\\sql\\driver.Value <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.Null
github.com\\tfbrother\\go\\src\\database\\sql\\driver.Value <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.NotNull
github.com\\tfbrother\\go\\src\\database\\sql\\driver.Value <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.defaultConverter
github.com\\tfbrother\\go\\src\\database\\sql\\driver.Result <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.noRows
github.com\\tfbrother\\go\\src\\database\\sql\\driver.ValueConverter <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.boolType
github.com\\tfbrother\\go\\src\\database\\sql\\driver.ValueConverter <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.int32Type
github.com\\tfbrother\\go\\src\\database\\sql\\driver.ValueConverter <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.stringType
github.com\\tfbrother\\go\\src\\database\\sql\\driver.ValueConverter <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.Null
github.com\\tfbrother\\go\\src\\database\\sql\\driver.ValueConverter <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.NotNull
github.com\\tfbrother\\go\\src\\database\\sql\\driver.ValueConverter <|- github.com\\tfbrother\\go\\src\\database\\sql\\driver.defaultConverter
@enduml